<%- include("partials/aside") %>
<main class="flex-1 p-6 overflow-auto">
  <!-- Header -->
  <div class="flex justify-between items-end">
    <div>
      <h1 class="text-3xl font-bold text-[#000]">Manage Top</h1>
      <p class="mt-2 text-gray-700">Create, edit, or delete your Top below.</p>
    </div>

    <!-- Add Button -->
    <div>
      <button id="openAddModalBtn" class="font-medium text-[#000] border border-[#000] px-6 py-2 text-[14px] cursor-pointer rounded hover:bg-[#000] hover:text-white transition">
        + Add Top
      </button>
    </div>
  </div>

  <!-- Top Table -->
  <div class="bg-white p-6 rounded shadow mt-6 overflow-x-auto">
    <h2 class="text-[#000] font-semibold text-xl mb-4">Top List</h2>
    <table class="min-w-full table-auto border-collapse">
      <thead>
        <tr class="bg-gray-100 text-left">
          <th class="px-4 py-2 border">Heading</th>
          <th class="px-4 py-2 border">Sub Heading</th>
          <th class="px-4 py-2 border">Title</th>
          <th class="px-4 py-2 border">Sub Title</th>
          <th class="px-4 py-2 border">Used By</th>
          <th class="px-4 py-2 border">Image</th>
          <th class="px-4 py-2 border">Actions</th>
        </tr>
      </thead>
      <tbody id="topTableBody">
        <% if (data && data?.top?.length> 0) { %>
        <% data?.top?.forEach((item)=> { %>
        <tr>
          <td class="px-4 py-2 border">
            <%= item.heading || "—" %>
          </td>
          <td class="px-4 py-2 border">
            <%= item.subHeading || "—" %>
          </td>
          <td class="px-4 py-2 border">
            <%= item.title || "—" %>
          </td>
          <td class="px-4 py-2 border">
            <%= item.subTitle || "—" %>
          </td>
          <td class="px-4 py-2 border capitalize">
            <%= item.usedBy || "—" %>
          </td>
          <td class="px-4 py-2 border">
            <% if (item.image) { %>
            <img src="/<%= item.image %>" alt="image" class="w-12 h-12 object-cover rounded">
            <% } else { %> — <% } %>
          </td>
          <!-- Actions -->
          <td class="px-4 py-2 border space-x-2 text-center">
            <button class="bg-[#000] text-white px-2 py-1 rounded cursor-pointer openEditModalBtn" data-id="<%= item._id %>" data-heading="<%= item.heading %>" data-subheading="<%= item.subHeading %>" data-title="<%= item.title %>" data-subtitle="<%= item.subTitle %>" data-usedby="<%= item.usedBy %>" data-image="<%= item.image %>" data-bgimg="<%= item.bgImg %>" data-metatitle="<%= item.meta_title %>" data-metadescription="<%= item.meta_description %>" data-keywords="<%= item.keywords %>" data-ogtitle="<%= item.og_title %>" data-ogdescription="<%= item.og_description %>" data-ogimage="<%= item.og_image %>" data-ogurl="<%= item.og_url %>" data-ogtype="<%= item.og_type %>" data-status="<%= item.status %>">
              Edit
            </button>

            <button class="border cursor-pointer px-2 py-1 rounded deleteBtn" data-id="<%= item._id %>">
              Delete
            </button>
          </td>
        </tr>
        <% }) %>
        <% } else { %>
        <tr>
          <td colspan="8" class="text-center py-4 text-gray-500">
            No Top records found.
          </td>
        </tr>
        <% } %>
      </tbody>
    </table>
  </div>

</main>


  <!-- Add Top Modal -->
  <div id="addTopModal" class="hidden fixed inset-0 bg-black/40 flex items-center justify-center z-50">
    <div class="h-[700px] overflow-y-scroll bg-white w-[90%] max-w-lg rounded-lg shadow-lg p-6 relative">
      <!-- Close Button -->
      <button id="closeAddModalBtn" class="absolute top-3 right-3 text-gray-500 hover:text-black text-xl">
        &times;
      </button>

      <h2 class="text-[#000] font-semibold text-xl mb-4">Add Top Section</h2>

      <form id="addTopForm" class="space-y-4" enctype="multipart/form-data">
        <!-- Heading -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="heading">Heading</label>
          <input type="text" id="heading" name="heading" class="w-full border border-gray-300 rounded p-2" required />
        </div>

        <!-- Sub Heading -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="subHeading">Sub Heading</label>
          <input type="text" id="subHeading" name="subHeading" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Title -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="title">Title</label>
          <input type="text" id="title" name="title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Sub Title -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="subTitle">Sub Title</label>
          <input type="text" id="subTitle" name="subTitle" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Used By -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="usedBy">Used By</label>
          <select id="usedBy" name="usedBy" class="w-full border border-gray-300 rounded p-2" required>
            <option value="">Select Option</option>
            <option value="service">Service</option>
            <option value="blog">Blog</option>
          </select>
        </div>

        <!-- Image -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="image">Main Image</label>
          <input type="file" id="image" name="image" class="w-full border border-gray-300 rounded p-2 cursor-pointer" accept="image/*" />
        </div>

        <!-- Meta Title -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="meta_title">Meta Title</label>
          <input type="text" id="meta_title" name="meta_title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Meta Description -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="meta_description">Meta Description</label>
          <textarea id="meta_description" name="meta_description" rows="2" class="w-full border border-gray-300 rounded p-2"></textarea>
        </div>

        <!-- Keywords -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="keywords">Keywords</label>
          <input type="text" id="keywords" name="keywords" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- OG Fields -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_title">OG Title</label>
          <input type="text" id="og_title" name="og_title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_description">OG Description</label>
          <textarea id="og_description" name="og_description" rows="2" class="w-full border border-gray-300 rounded p-2"></textarea>
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_image">OG Image</label>
          <input type="file" id="og_image" name="og_image" class="w-full border border-gray-300 rounded p-2 cursor-pointer" accept="image/*" />
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_url">OG URL</label>
          <input type="text" id="og_url" name="og_url" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_type">OG Type</label>
          <input type="text" id="og_type" name="og_type" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Submit -->
        <button type="submit" class="bg-[#000] text-white px-4 py-2 rounded hover:bg-gray-800 transition">
          Add Top
        </button>
      </form>
    </div>
  </div>



  <!-- Edit Top Modal -->
  <div id="editTopModal" class="hidden fixed inset-0 bg-black/40 flex items-center justify-center z-50">
    <div class="h-[700px] overflow-y-scroll bg-white w-[90%] max-w-lg rounded-lg shadow-lg p-6 relative">
      <!-- Close Button -->
      <button id="closeEditModalBtn" class="absolute top-3 right-3 text-gray-500 hover:text-black text-xl">
        &times;
      </button>

      <h2 class="text-[#000] font-semibold text-xl mb-4">Edit Top Section</h2>

      <form id="editTopForm" class="space-y-4" enctype="multipart/form-data">
        <input type="hidden" id="editId" name="id" />

        <!-- Heading -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editHeading">Heading</label>
          <input type="text" id="editHeading" name="heading" class="w-full border border-gray-300 rounded p-2" required />
        </div>

        <!-- Sub Heading -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editSubHeading">Sub Heading</label>
          <input type="text" id="editSubHeading" name="subHeading" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Title -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editTitle">Title</label>
          <input type="text" id="editTitle" name="title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Sub Title -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editSubTitle">Sub Title</label>
          <input type="text" id="editSubTitle" name="subTitle" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Used By -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editUsedBy">Used By</label>
          <select id="editUsedBy" name="usedBy" class="w-full border border-gray-300 rounded p-2" required>
            <option value="">Select Option</option>
            <option value="service">Service</option>
            <option value="blog">Blog</option>
          </select>
        </div>

        <!-- Image -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editImage">Main Image</label>
          <input type="file" id="editImage" name="image" class="w-full border border-gray-300 rounded p-2 cursor-pointer" accept="image/*" />
          <img id="currentImagePreview" src="" alt="Current Image" class="w-24 h-24 mt-2 rounded object-cover hidden" />
        </div>



        <!-- Meta Title -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editMetaTitle">Meta Title</label>
          <input type="text" id="editMetaTitle" name="meta_title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Meta Description -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editMetaDescription">Meta Description</label>
          <textarea id="editMetaDescription" name="meta_description" rows="2" class="w-full border border-gray-300 rounded p-2"></textarea>
        </div>

        <!-- Keywords -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editKeywords">Keywords</label>
          <input type="text" id="editKeywords" name="keywords" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- OG Title -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editOgTitle">OG Title</label>
          <input type="text" id="editOgTitle" name="og_title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- OG Description -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editOgDescription">OG Description</label>
          <textarea id="editOgDescription" name="og_description" rows="2" class="w-full border border-gray-300 rounded p-2"></textarea>
        </div>

        <!-- OG Image -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editOgImage">OG Image</label>
          <input type="file" id="editOgImage" name="og_image" class="w-full border border-gray-300 rounded p-2 cursor-pointer" accept="image/*" />
          <img id="currentOgImagePreview" src="" alt="Current OG Image" class="w-24 h-24 mt-2 rounded object-cover hidden" />
        </div>

        <!-- OG URL -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editOgUrl">OG URL</label>
          <input type="text" id="editOgUrl" name="og_url" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- OG Type -->
        <div>
          <label class="block text-gray-700 font-medium mb-1" for="editOgType">OG Type</label>
          <input type="text" id="editOgType" name="og_type" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <!-- Submit -->
        <button type="submit" class="bg-[#000] text-white px-4 py-2 rounded hover:bg-gray-800 transition">
          Save Changes
        </button>
      </form>
    </div>
  </div>


  <script>
    // Add Modal
    const openAddModalBtn = document.getElementById("openAddModalBtn");
    const addTopModal = document.getElementById("addTopModal");
    const closeAddModalBtn = document.getElementById("closeAddModalBtn");

    openAddModalBtn.addEventListener("click", () => {
      addTopModal.classList.remove("hidden");
    });

    closeAddModalBtn.addEventListener("click", () => {
      addTopModal.classList.add("hidden");
    });




// ✅ Add Form Submission Logic
    const addTopForm = document.getElementById("addTopForm");

    addTopForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = new FormData(addTopForm);

      try {
        const response = await fetch("/api/top", {
          method: "POST",
          body: formData,
        });

        const result = await response.json();

        if (result.status) {
          alert("Top section added successfully!");
          addTopForm.reset();
          addTopModal.classList.add("hidden");
          location.reload();
        } else {
          alert(result.message || "Failed to add top section.");
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Something went wrong while adding the top section.");
      }
    });


  </script>

  <!-- Delete Vision & Mission Entry -->
  <script>

    document.querySelectorAll(".deleteBtn").forEach((btn) => {
      btn.addEventListener("click", async () => {
        const id = btn.getAttribute("data-id");
        if (!id) return alert("❌ Invalid ID");
        if (!confirm("Are you sure you want to delete this record?")) return;
        try {
          const response = await fetch(`/api/top/${id}`, {
            method: "DELETE",
          });
          const result = await response.json();
          if (result.status) {
            alert("✅ Deleted successfully!");
            // Remove row from table instantly
            btn.closest("tr").remove();
          } else {
            alert("❌ " + (result.message || "Delete failed"));
          }
        } catch (error) {
          console.error("Error:", error);
          alert("⚠️ Server error. Try again later.");
        }
      });
    });
  </script>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Elements
      const editTopModal = document.getElementById("editTopModal");
      const closeEditModalBtn = document.getElementById("closeEditModalBtn");
      const editButtons = document.querySelectorAll(".openEditModalBtn");
      const editTopForm = document.getElementById("editTopForm");

      // Input fields
      const editId = document.getElementById("editId");
      const editHeading = document.getElementById("editHeading");
      const editSubHeading = document.getElementById("editSubHeading");
      const editTitle = document.getElementById("editTitle");
      const editSubTitle = document.getElementById("editSubTitle");
      const editUsedBy = document.getElementById("editUsedBy");
      const currentImagePreview = document.getElementById("currentImagePreview");
      const currentOgImagePreview = document.getElementById("currentOgImagePreview");
      const editMetaTitle = document.getElementById("editMetaTitle");
      const editMetaDescription = document.getElementById("editMetaDescription");
      const editKeywords = document.getElementById("editKeywords");
      const editOgTitle = document.getElementById("editOgTitle");
      const editOgDescription = document.getElementById("editOgDescription");
      const editOgUrl = document.getElementById("editOgUrl");
      const editOgType = document.getElementById("editOgType");

      // 🟢 OPEN EDIT MODAL AND FILL DATA
      editButtons.forEach((btn) => {
        btn.addEventListener("click", () => {
          // Fill the form from data attributes
          editId.value = btn.dataset.id || "";
          editHeading.value = btn.dataset.heading || "";
          editSubHeading.value = btn.dataset.subheading || "";
          editTitle.value = btn.dataset.title || "";
          editSubTitle.value = btn.dataset.subtitle || "";
          editUsedBy.value = btn.dataset.usedby || "";

          if (btn.dataset.image) {
            // if dataset contains only filename, prepend your upload folder path
            const imagePath = btn.dataset.image.startsWith("http")
              ? btn.dataset.image
              : `/${btn.dataset.image}`; // change this path if your folder name differs
            currentImagePreview.src = imagePath;
            currentImagePreview.classList.remove("hidden");
          } else {
            currentImagePreview.classList.add("hidden");
          }
          if (btn.dataset.ogimage) {
            const ogImagePath = btn.dataset.ogimage.startsWith("http")
              ? btn.dataset.ogimage
              : `/${btn.dataset.ogimage}`;
            currentOgImagePreview.src = ogImagePath;
            currentOgImagePreview.classList.remove("hidden");
          } else {
            currentOgImagePreview.classList.add("hidden");
          }
          // Meta & OG data
          editMetaTitle.value = btn.dataset.metatitle || "";
          editMetaDescription.value = btn.dataset.metadescription || "";
          editKeywords.value = btn.dataset.keywords || "";
          editOgTitle.value = btn.dataset.ogtitle || "";
          editOgDescription.value = btn.dataset.ogdescription || "";
          editOgUrl.value = btn.dataset.ogurl || "";
          editOgType.value = btn.dataset.ogtype || "";

          // ✅ Show modal
          editTopModal.classList.remove("hidden");
        });
      });

      // 🟠 CLOSE MODAL
      closeEditModalBtn.addEventListener("click", () => {
        editTopModal.classList.add("hidden");
      });

      // 🟣 SUBMIT EDIT FORM
      editTopForm.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(editTopForm);

        try {
          const response = await fetch(`/api/top/${editId.value}`, {
            method: "PUT",
            body: formData,
          });

          const result = await response.json();

          if (result.status) {
            alert("✅ Top section updated successfully!");
            editTopModal.classList.add("hidden");
            location.reload();
          } else {
            alert(result.message || "Failed to update top section.");
          }
        } catch (error) {
          console.error("Error:", error);
          alert("Something went wrong while updating.");
        }
      });
    });
  </script>