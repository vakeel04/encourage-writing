<%- include("partials/aside") %>

<main class="flex-1 p-6 overflow-auto">
  <!-- Header -->
  <div class="flex justify-between items-end">
    <div>
      <h1 class="text-3xl font-bold text-[#000]">Manage FAQs</h1>
      <p class="mt-2 text-gray-700">Add, edit, or delete FAQ sections below.</p>
    </div>
    <div>
      <button id="openFaqModalBtn" class="font-medium text-[#000] border border-[#000] px-6 py-2 text-[14px] cursor-pointer rounded hover:bg-[#000] hover:text-white transition">
        + Add FAQ Section
      </button>
    </div>
  </div>

  <!-- FAQ Table -->
  <div class="bg-white p-6 rounded shadow mt-6 overflow-x-auto">
    <h2 class="text-[#000] font-semibold text-xl mb-4">FAQ List</h2>
    <table class="min-w-full table-auto border-collapse">
      <thead>
        <tr class="bg-gray-100 text-left">
          <th class="px-4 py-2 border">Used By</th>
          <th class="px-4 py-2 border">Heading</th>
          <th class="px-4 py-2 border">Sub Heading</th>
          <th class="px-4 py-2 border">Questions</th>
          <th class="px-4 py-2 border">Status</th>
          <th class="px-4 py-2 border">Actions</th>
        </tr>
      </thead>
      <tbody id="faqTableBody">
        <% if (data && data.faq && data.faq.length > 0) { %>
        <% data.faq.forEach(faq => { %>
        <tr class="hover:bg-gray-50 transition">
          <td class="px-4 py-2 border"><%= faq.usedBy %></td>
          <td class="px-4 py-2 border"><%= faq.heading %></td>
          <td class="px-4 py-2  border">
            <div class="max-h-24 overflow-y-auto scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-100 text-sm"><%= faq.subHeading %></div>
          </td>

          <!-- ✅ FIXED QUESTIONS COLUMN -->
          <td class="px-4 py-2 border align-top">
            <% if (faq.detail && faq.detail.length > 0) { %>
            <div class="max-h-24 overflow-y-auto w-[250px] scrollbar-thin scrollbar-thumb-gray-400 scrollbar-track-gray-100 text-sm">
              <% faq.detail.slice(0, 3).forEach(d => { %>
              <!-- Show only first 3 -->
              <p class="mb-1"><strong><%= d.question %></strong> - <%= d.answer %></p>
              <% }) %>

              <% if (faq.detail.length > 3) { %>
              <p class="text-gray-400 italic text-xs">+ <%= faq.detail.length - 3 %> more...</p>
              <% } %>
            </div>
            <% } else { %>
            <span class="text-gray-400">No Questions</span>
            <% } %>
          </td>

          <td class="px-4 py-2 border">
            <span class="px-2 py-1 text-xs rounded <%= faq.status ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700' %>">
              <%= faq.status ? "Active" : "Inactive" %>
            </span>
          </td>

          <td class="px-4 py-2 border text-center">
            <div class="flex space-x-2 justify-center">
              <button type="button" class="border border-[#000] text-[#000] px-2 py-1 rounded cursor-pointer openEditFaqModalBtn" data-id="<%= faq._id %>" data-usedby="<%- faq.usedBy %>" data-heading="<%- faq.heading %>" data-subheading="<%- faq.subHeading %>" data-detail='<%- JSON.stringify(faq.detail || []) %>'>
                Edit
              </button>


              <form onsubmit="deleteFaq('<%= faq._id %>'); return false;" method="post" class="inline">
                <button type="submit" class="border border-[#000] text-[#000] px-2 py-1 rounded cursor-pointer hover:bg-gray-100">
                  Delete
                </button>
              </form>

            </div>
          </td>
        </tr>
        <% }) %>
        <% } else { %>
        <tr>
          <td colspan="6" class="text-center py-4 text-gray-500">No FAQs Found</td>
        </tr>
        <% } %>
      </tbody>
    </table>

  </div>
</main>

<!-- =================== ADD FAQ MODAL =================== -->
<div id="faqModal" class="hidden fixed inset-0 bg-black/40 flex items-center justify-center z-50">
  <div class="bg-white w-full max-w-3xl rounded-lg shadow-lg p-6 relative overflow-y-auto max-h-[90vh]">
    <button id="closeFaqModalBtn" class="absolute top-3 right-3 text-gray-500 hover:text-black text-2xl font-bold">&times;</button>
    <h2 class="text-black font-semibold text-2xl mb-4">Add FAQ Section</h2>

    <form id="faqForm" enctype="multipart/form-data" class="space-y-4">
      <!-- Used By -->
      <div>
        <label class="block text-gray-700 font-medium mb-1">Used By</label>
        <select name="usedBy" id="usedBy" class="w-full border border-gray-300 rounded p-2" required>
          <option value="">Select</option>
          <option value="home">Home</option>
          <option value="service-detail">Service Detail</option>
        </select>
      </div>

      <!-- Heading -->
      <div>
        <label class="block text-gray-700 font-medium mb-1">Heading</label>
        <input type="text" name="heading" id="heading" class="w-full border border-gray-300 rounded p-2" placeholder="Enter heading" required />
      </div>

      <!-- Sub Heading -->
      <div>
        <label class="block text-gray-700 font-medium mb-1">Sub Heading</label>
        <input type="text" name="subHeading" id="subHeading" class="w-full border border-gray-300 rounded p-2" placeholder="Enter sub heading" required />
      </div>

      <!-- FAQ Details -->
      <div id="faqDetailsContainer" class="space-y-3">
        <h3 class="font-semibold text-lg text-gray-800">FAQ Details</h3>
        <div class="faq-detail flex gap-2">
          <input type="text" name="question[]" placeholder="Question" class="border border-gray-300 p-2 rounded w-1/2" required />
          <input type="text" name="answer[]" placeholder="Answer" class="border border-gray-300 p-2 rounded w-1/2" required />
        </div>
      </div>

      <button type="button" id="addFaqDetailBtn" class="mt-2 text-sm text-blue-600 underline">+ Add More</button>

      <!-- Meta Fields -->
      <div class="grid grid-cols-2 gap-4 mt-4">
        <div>
          <label class="block text-gray-700 font-medium mb-1">Meta Title</label>
          <input type="text" name="meta_title" class="w-full border border-gray-300 rounded p-2" placeholder="Enter meta title" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">Meta Description</label>
          <input type="text" name="meta_description" class="w-full border border-gray-300 rounded p-2" placeholder="Enter meta description" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">Keywords</label>
          <input type="text" name="keywords" class="w-full border border-gray-300 rounded p-2" placeholder="Enter keywords (comma separated)" />
        </div>
      </div>

      <!-- OG (Open Graph) Fields -->
      <h3 class="font-semibold text-lg text-gray-800 mt-6">Open Graph (OG) Fields</h3>
      <div class="grid grid-cols-2 gap-4">
        <div>
          <label class="block text-gray-700 font-medium mb-1">OG Title</label>
          <input type="text" name="og_title" class="w-full border border-gray-300 rounded p-2" placeholder="Enter OG title" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">OG Description</label>
          <input type="text" name="og_description" class="w-full border border-gray-300 rounded p-2" placeholder="Enter OG description" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">OG Image</label>
          <input type="file" name="og_image" accept="image/*" class="w-full border border-gray-300 rounded p-2" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">OG URL</label>
          <input type="text" name="og_url" class="w-full border border-gray-300 rounded p-2" placeholder="Enter OG URL" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">OG Type</label>
          <input type="text" name="og_type" class="w-full border border-gray-300 rounded p-2" placeholder="Enter OG type (e.g., website)" />
        </div>
      </div>

      <!-- Submit -->
      <div class="flex justify-end space-x-3 mt-4">
        <button type="button" id="cancelFaqModalBtn" class="border border-black text-black px-4 py-2 rounded hover:bg-gray-100 transition cursor-pointer">Cancel</button>
        <button type="submit" class="bg-black text-white px-4 py-2 rounded hover:opacity-90 transition cursor-pointer">Add FAQ</button>
      </div>
    </form>
  </div>
</div>


<!-- =================== EDIT FAQ MODAL =================== -->
<div id="editFaqModal" class="hidden fixed inset-0 bg-black/40 bg-opacity-50 flex items-center justify-center z-50">
  <div class="bg-white w-full max-w-2xl rounded-lg shadow-lg p-6 relative animate-[fadeIn_0.3s_ease]">
    <button id="closeEditFaqModalBtn" class="absolute top-3 right-3 text-gray-500 hover:text-[#000] text-2xl font-bold cursor-pointer">&times;</button>
    <h2 class="text-[#000] font-semibold text-2xl mb-4">Edit FAQ Section</h2>

    <form id="faqEditForm" class="space-y-4">
      <input type="hidden" id="editFaqId" name="id" />

      <div>
        <label class="block text-gray-700 font-medium mb-1">Used By</label>
        <select id="editUsedBy" name="usedBy" class="w-full border border-gray-300 rounded p-2" required>
          <option value="home">Home</option>
          <option value="service-detail">Service Detail</option>
        </select>
      </div>

      <div>
        <label class="block text-gray-700 font-medium mb-1">Heading</label>
        <input type="text" id="editFaqHeading" name="heading" class="w-full border border-gray-300 rounded p-2" required />
      </div>

      <div>
        <label class="block text-gray-700 font-medium mb-1">Sub Heading</label>
        <input type="text" id="editFaqSubHeading" name="subHeading" class="w-full border border-gray-300 rounded p-2" required />
      </div>

      <!-- Edit FAQ Details -->
      <div id="editFaqDetailsContainer" class="space-y-3">
        <h3 class="font-semibold text-lg text-gray-800">FAQ Details</h3>
      </div>

      <button type="button" id="addEditFaqDetailBtn" class="mt-2 text-sm text-blue-600 underline">+ Add More</button>

      <div class="flex justify-end space-x-3 mt-4">
        <button type="button" id="cancelEditFaqModalBtn" class="border border-[#000] text-[#000] px-4 py-2 rounded hover:bg-gray-100 transition cursor-pointer">Cancel</button>
        <button type="submit" class="bg-[#000] text-white px-4 py-2 rounded cursor-pointer hover:opacity-90 transition">Save Changes</button>
      </div>
    </form>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const faqModal = document.getElementById("faqModal");
    const openFaqModalBtn = document.getElementById("openFaqModalBtn"); // button to open modal
    const closeFaqModalBtn = document.getElementById("closeFaqModalBtn");
    const cancelFaqModalBtn = document.getElementById("cancelFaqModalBtn");
    const addFaqDetailBtn = document.getElementById("addFaqDetailBtn");
    const faqDetailsContainer = document.getElementById("faqDetailsContainer");
    const faqForm = document.getElementById("faqForm");

    // ✅ Open modal
    if (openFaqModalBtn) {
      openFaqModalBtn.addEventListener("click", () => faqModal.classList.remove("hidden"));
    }

    // ✅ Close modal
    [closeFaqModalBtn, cancelFaqModalBtn].forEach(btn => {
      btn.addEventListener("click", () => {
        faqModal.classList.add("hidden");
        faqForm.reset();
      });
    });

    // ✅ Add more question-answer fields
    addFaqDetailBtn.addEventListener("click", () => {
      const div = document.createElement("div");
      div.classList.add("faq-detail", "flex", "gap-2");
      div.innerHTML = `
      <input type="text" name="question[]" placeholder="Question" class="border border-gray-300 p-2 rounded w-1/2" required />
      <input type="text" name="answer[]" placeholder="Answer" class="border border-gray-300 p-2 rounded w-1/2" required />
    `;
      faqDetailsContainer.appendChild(div);
    });

    // ✅ Submit Form (with image + JSON data)
    faqForm.addEventListener("submit", async (e) => {
      e.preventDefault();

      const formData = new FormData(faqForm);

      // Collect questions/answers
      const questions = [...faqForm.querySelectorAll('input[name="question[]"]')].map(i => i.value.trim());
      const answers = [...faqForm.querySelectorAll('input[name="answer[]"]')].map(i => i.value.trim());

      // Convert to detail array
      const detail = questions.map((q, i) => ({
        question: q,
        answer: answers[i]
      }));
      formData.append("detail", JSON.stringify(detail));

      try {
        const res = await fetch("/api/faq", {
          method: "POST",
          body: formData
        });

        const result = await res.json();
        if (result.status) {
          alert("✅ FAQ added successfully!");
          faqModal.classList.add("hidden");
          faqForm.reset();
          location.reload();
        } else {
          alert("❌ " + result.message);
        }
      } catch (err) {
        console.error("Error:", err);
        alert("❌ Something went wrong. Please try again.");
      }
    });
  });
</script>

<script>
  async function deleteFaq(faqId) {
    if (!confirm("Are you sure you want to delete this FAQ?")) return;

    try {
      const response = await fetch(`/api/faq/${faqId}`, {
        method: "DELETE",
        headers: {
          "Content-Type": "application/json"
        }
      });

      const data = await response.json();

      if (data.status) {
        alert(data.message);
        window.location.reload(); // refresh list after delete
      } else {
        alert(data.message || "Failed to delete FAQ");
      }
    } catch (error) {
      console.error(error);
      alert("Something went wrong while deleting the FAQ.");
    }
  }
</script>

<script>
  // ==============================
  // SELECT ELEMENTS
  // ==============================
  const editFaqModal = document.getElementById("editFaqModal");
  const editFaqDetailsContainer = document.getElementById("editFaqDetailsContainer");
  const cancelEditFaqModalBtn = document.getElementById("cancelEditFaqModalBtn");
  const closeEditFaqModalBtn = document.getElementById("closeEditFaqModalBtn");
  const addEditFaqDetailBtn = document.getElementById("addEditFaqDetailBtn");

  // ==============================
  // OPEN MODAL (FROM "EDIT" BUTTON)
  // ==============================
  document.querySelectorAll(".openEditFaqModalBtn").forEach(button => {
    button.addEventListener("click", () => {
      const id = button.dataset.id;
      const usedBy = button.dataset.usedby;
      const heading = button.dataset.heading;
      const subHeading = button.dataset.subheading;
      const details = JSON.parse(button.dataset.detail || "[]");

      // Fill hidden and visible fields
      document.getElementById("editFaqId").value = id;
      document.getElementById("editUsedBy").value = usedBy;
      document.getElementById("editFaqHeading").value = heading;
      document.getElementById("editFaqSubHeading").value = subHeading;

      // Reset FAQ Details container
      editFaqDetailsContainer.innerHTML = `
        <h3 class="font-semibold text-lg text-gray-800">FAQ Details</h3>
      `;

      // Add existing Q/A fields
      details.forEach(item => {
        editFaqDetailsContainer.insertAdjacentHTML(
          "beforeend",
          `
            <div class="faq-detail flex gap-2">
              <input type="text" name="question[]" value="${item.question || ""}" placeholder="Question"
                class="border border-gray-300 p-2 rounded w-1/2" required />
              <input type="text" name="answer[]" value="${item.answer || ""}" placeholder="Answer"
                class="border border-gray-300 p-2 rounded w-1/2" required />
              <button type="button" class="removeFaqDetailBtn text-red-600 font-bold">&times;</button>
            </div>
          `
        );
      });

      // Show modal
      editFaqModal.classList.remove("hidden");
    });
  });

  // ==============================
  // ADD NEW Q/A FIELD
  // ==============================
  addEditFaqDetailBtn.addEventListener("click", () => {
    editFaqDetailsContainer.insertAdjacentHTML(
      "beforeend",
      `
        <div class="faq-detail flex gap-2">
          <input type="text" name="question[]" placeholder="Question"
            class="border border-gray-300 p-2 rounded w-1/2" required />
          <input type="text" name="answer[]" placeholder="Answer"
            class="border border-gray-300 p-2 rounded w-1/2" required />
          <button type="button" class="removeFaqDetailBtn text-red-600 font-bold">&times;</button>
        </div>
      `
    );
  });

  // ==============================
  // REMOVE A Q/A FIELD
  // ==============================
  editFaqDetailsContainer.addEventListener("click", e => {
    if (e.target.classList.contains("removeFaqDetailBtn")) {
      e.target.parentElement.remove();
    }
  });

  // ==============================
  // CLOSE MODAL
  // ==============================
  cancelEditFaqModalBtn.addEventListener("click", () => editFaqModal.classList.add("hidden"));
  closeEditFaqModalBtn.addEventListener("click", () => editFaqModal.classList.add("hidden"));

  // ==============================
  // HANDLE FORM SUBMIT (UPDATE FAQ)
  // ==============================
  document.getElementById("faqEditForm").addEventListener("submit", async (e) => {
    e.preventDefault();

    const id = document.getElementById("editFaqId").value;
    const usedBy = document.getElementById("editUsedBy").value;
    const heading = document.getElementById("editFaqHeading").value;
    const subHeading = document.getElementById("editFaqSubHeading").value;

    const questions = [...document.querySelectorAll('#editFaqDetailsContainer [name="question[]"]')].map(i => i.value);
    const answers = [...document.querySelectorAll('#editFaqDetailsContainer [name="answer[]"]')].map(i => i.value);

    const detail = questions.map((q, i) => ({
      question: q,
      answer: answers[i]
    }));

    const formData = {
      usedBy,
      heading,
      subHeading,
      detail
    };

    try {
      const res = await fetch(`/api/faq/${id}`, {
        method: "PUT",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(formData)
      });

      const data = await res.json();

      if (data.status) {
        alert("✅ FAQ updated successfully!");
        window.location.reload();
      } else {
        alert("❌ " + (data.message || "Failed to update FAQ"));
      }
    } catch (error) {
      console.error("Error updating FAQ:", error);
      alert("Something went wrong while updating FAQ");
    }
  });
</script>