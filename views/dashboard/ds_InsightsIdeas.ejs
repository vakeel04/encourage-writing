<%- include("partials/aside") %>

<main class="flex-1 p-6 overflow-auto">
  <!-- Header -->
  <div class="flex justify-between items-end">
    <div>
      <h1 class="text-3xl font-bold text-[#000]">Manage Ideas</h1>
      <p class="mt-2 text-gray-700">Create, edit, or delete your Ideas below.</p>
    </div>

    <!-- Add Button -->
    <div>
      <button
        id="openAddModalBtn"
        class="font-medium text-[#000] border border-[#000] px-6 py-2 text-[14px] cursor-pointer rounded hover:bg-[#000] hover:text-white transition"
      >
        + Add Service
      </button>
    </div>
  </div>

<!-- Ideas Table -->
<div class="bg-white p-6 rounded shadow mt-6 overflow-x-auto">
  <h2 class="text-[#000] font-semibold text-xl mb-4">Ideas List</h2>
  <table class="min-w-full table-auto border-collapse">
    <thead>
      <tr class="bg-gray-100 text-left">
        <th class="px-4 py-2 border">Title</th>
        <th class="px-4 py-2 border">Sub Title</th>
        <th class="px-4 py-2 border">Detail Title</th>
        <th class="px-4 py-2 border">Detail Description</th>
        <th class="px-4 py-2 border">Detail Image</th>
        <th class="px-4 py-2 border">Detail Date</th>
        <th class="px-4 py-2 border">Actions</th>
      </tr>
    </thead>

    <tbody id="ideasTableBody">
      <% data?.ideas.forEach((idea) => { %>
        <% idea.detail.forEach((d, index) => { %>
          <tr>
            <% if (index === 0) { %>
              <td class="px-4 py-2 border" rowspan="<%= idea.detail.length %>"><%= idea.title %></td>
              <td class="px-4 py-2 border" rowspan="<%= idea.detail.length %>"><%= idea.subTitle %></td>
            <% } %>
            <td class="px-4 py-2 border"><%= d.title %></td>
            <td class="px-4 py-2 border"><%= d.description %></td>
            <td class="px-4 py-2 border">
              <% if(d.image){ %>
                <img src="/<%= d.image %>" alt="<%= d.title %>" class="h-16 w-16 object-cover rounded" />
              <% } %>
            </td>
            <td class="px-4 py-2 border"><%= d.date ? new Date(d.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' }) : '' %></td>
            <% if(index === 0){ %>
              <td class="px-4 py-2 border space-x-2" rowspan="<%= idea.detail.length %>">
                <button class="bg-[#000] text-white px-2 py-1 rounded cursor-pointer openEditModalBtn">Edit</button>
                <button class="border cursor-pointer px-2 py-1 rounded deleteBtn" data-id="<%= idea._id %>">Delete</button>
              </td>
            <% } %>
          </tr>
        <% }) %>
      <% }) %>  
    </tbody>
    
  </table>
</div>

</main>
 
<!-- Add Idea Modal -->
<div
  id="addIdeaModal"
  class="hidden fixed inset-0 bg-black/40 flex items-center justify-center z-50 overflow-auto"
>
  <div class="bg-white w-[90%] h-[730px] overflow-y-scroll max-w-2xl rounded-lg shadow-lg p-6 relative">
    <!-- Close Button -->
    <button
      id="closeAddModalBtn"
      class="absolute top-3 right-3 text-gray-500 hover:text-black text-xl"
    >
      &times;
    </button>

    <h2 class="text-[#000] font-semibold text-xl mb-4">Add New Idea</h2>

    <form id="addIdeaForm" class="space-y-4">
      <!-- Title -->
      <div>
        <label class="block text-gray-700 font-medium mb-1" for="title">Title</label>
        <input type="text" id="title" name="title" class="w-full border border-gray-300 rounded p-2" required />
      </div>

      <!-- Sub Title -->
      <div>
        <label class="block text-gray-700 font-medium mb-1" for="subTitle">Sub Title</label>
        <input type="text" id="subTitle" name="subTitle" class="w-full border border-gray-300 rounded p-2" />
      </div>

      <!-- Detail Sections -->
      <div id="detailsContainer" class="space-y-4">
        <div class="detail-section border border-gray-300 rounded p-4">
          <h3 class="text-[#000] font-semibold mb-2">Detail Section 1</h3>

          <div>
            <label class="block text-gray-700 font-medium mb-1">Detail Title</label>
            <input type="text" name="detailTitle[]" class="w-full border border-gray-300 rounded p-2" required />
          </div>

          <div>
            <label class="block text-gray-700 font-medium mb-1">Detail Description</label>
            <textarea name="detailDescription[]" class="w-full border border-gray-300 rounded p-2" rows="3"></textarea>
          </div>

          <div>
            <label class="block text-gray-700 font-medium mb-1">Detail Image</label>
            <input type="file" name="detailImage[]" class="w-full border border-gray-300 rounded p-2 cursor-pointer" />
          </div>

          <div>
            <label class="block text-gray-700 font-medium mb-1">Detail Date</label>
            <input type="date" name="detailDate[]" class="w-full border border-gray-300 rounded p-2" />
          </div>
        </div>
      </div>

      <!-- Add More Detail Section Button -->
      <button
        type="button"
        id="addDetailSectionBtn"
        class="mt-2 bg-gray-200 text-[#000] px-3 py-1 rounded hover:bg-gray-300 transition"
      >
        + Add Detail Section
      </button>

      <!-- Meta Information -->
      <div class="border border-gray-300 rounded p-4">
        <h3 class="text-[#000] font-semibold mb-2">Meta Information</h3>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="meta_title">Meta Title</label>
          <input type="text" id="meta_title" name="meta_title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="meta_description">Meta Description</label>
          <textarea id="meta_description" name="meta_description" class="w-full border border-gray-300 rounded p-2" rows="2"></textarea>
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="keywords">Keywords</label>
          <input type="text" id="keywords" name="keywords" class="w-full border border-gray-300 rounded p-2" placeholder="e.g. idea, creativity, innovation" />
        </div>
      </div>

      <!-- OG Section -->
      <div class="border border-gray-300 rounded p-4">
        <h3 class="text-[#000] font-semibold mb-2">OG (Open Graph) Data</h3>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_title">OG Title</label>
          <input type="text" id="og_title" name="og_title" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_description">OG Description</label>
          <textarea id="og_description" name="og_description" class="w-full border border-gray-300 rounded p-2" rows="2"></textarea>
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_image">OG Image</label>
          <input type="file" id="og_image" name="og_image" class="w-full border border-gray-300 rounded p-2 cursor-pointer" />
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_url">OG URL</label>
          <input type="text" id="og_url" name="og_url" class="w-full border border-gray-300 rounded p-2" />
        </div>

        <div>
          <label class="block text-gray-700 font-medium mb-1" for="og_type">OG Type</label>
          <input type="text" id="og_type" name="og_type" class="w-full border border-gray-300 rounded p-2" placeholder="e.g. article, website" />
        </div>
      </div>


      <!-- Submit Button -->
      <button type="submit" class="bg-[#000] text-white px-4 py-2 rounded hover:bg-gray-800 transition">
        Add Idea
      </button>
    </form>
  </div>
</div>


<!-- Edit Service Modal -->
<div
  id="editServiceModal"
  class="hidden fixed inset-0 bg-black/40 flex items-center justify-center z-50"
>
  <div class="bg-white w-[90%] max-w-lg rounded-lg shadow-lg p-6 relative">
    <button
      id="closeEditModalBtn"
      class="absolute top-3 right-3 text-gray-500 hover:text-black text-xl"
    >
      &times;
    </button>
    <h2 class="text-[#000] font-semibold text-xl mb-4">Edit Service</h2>
    <form id="editServiceForm" class="space-y-4">
      <div>
        <label class="block text-gray-700 font-medium mb-1" for="editTitle"
          >Title</label
        >
        <input
          type="text"
          id="editTitle"
          class="w-full border border-gray-300 rounded p-2"
          required
        />
      </div>
      <div>
        <label class="block text-gray-700 font-medium mb-1" for="editDescription"
          >Description</label
        >
        <textarea
          id="editDescription"
          class="w-full border border-gray-300 rounded p-2"
          rows="3"
          required
        ></textarea>
      </div>
      <div>
        <label class="block text-gray-700 font-medium mb-1" for="editImage"
          >Image</label
        >
        <input
          type="file"
          id="editImage"
          class="w-full border border-gray-300 rounded p-2 cursor-pointer"
        />
      </div>
      <button
        type="submit"
        class="bg-[#000] text-white px-4 py-2 rounded hover:bg-gray-800 transition"
      >
        Save Changes
      </button>
    </form>
  </div>
</div>

<script>
  // ===== Modal Controls =====
  const addIdeaModal = document.getElementById("addIdeaModal");
  const openAddModalBtn = document.getElementById("openAddModalBtn");
  const closeAddModalBtn = document.getElementById("closeAddModalBtn");
  const editServiceModal = document.getElementById("editServiceModal");
  const closeEditModalBtn = document.getElementById("closeEditModalBtn");
  const editButtons = document.querySelectorAll(".openEditModalBtn");

  // Open Add Modal
  if (openAddModalBtn) {
    openAddModalBtn.addEventListener("click", () => {
      addIdeaModal.classList.remove("hidden");
    });
  }

  // Close Add Modal
  if (closeAddModalBtn) {
    closeAddModalBtn.addEventListener("click", () => {
      addIdeaModal.classList.add("hidden");
    });
  }

  // Open Edit Modal
  editButtons.forEach((btn) => {
    btn.addEventListener("click", () => {
      editServiceModal.classList.remove("hidden");
    });
  });

  // Close Edit Modal
  if (closeEditModalBtn) {
    closeEditModalBtn.addEventListener("click", () => {
      editServiceModal.classList.add("hidden");
    });
  }

  // Close modals by clicking outside
  window.addEventListener("click", (e) => {
    if (e.target === addIdeaModal) addIdeaModal.classList.add("hidden");
    if (e.target === editServiceModal) editServiceModal.classList.add("hidden");
  });

  // ===== Dynamic Detail Section =====
  const addDetailBtn = document.getElementById("addDetailSectionBtn");
  const detailsContainer = document.getElementById("detailsContainer");
  let detailCount = 1;

  if (addDetailBtn) {
    addDetailBtn.addEventListener("click", () => {
      detailCount++;
      const newSection = document.createElement("div");
      newSection.classList.add(
        "detail-section",
        "border",
        "border-gray-300",
        "rounded",
        "p-4",
        "mt-4"
      );

      newSection.innerHTML = `
        <div class="flex justify-between items-center mb-2">
          <h3 class="text-[#000] font-semibold">Detail Section ${detailCount}</h3>
          <button type="button" class="remove-section text-red-600 hover:text-red-800 text-sm">Remove</button>
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">Detail Title</label>
          <input type="text" name="detailTitle[]" class="w-full border border-gray-300 rounded p-2" required />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">Detail Description</label>
          <textarea name="detailDescription[]" class="w-full border border-gray-300 rounded p-2" rows="3"></textarea>
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">Detail Image</label>
          <input type="file" name="detailImage[]" class="w-full border border-gray-300 rounded p-2 cursor-pointer" />
        </div>
        <div>
          <label class="block text-gray-700 font-medium mb-1">Detail Date</label>
          <input type="date" name="detailDate[]" class="w-full border border-gray-300 rounded p-2" />
        </div>
      `;

      detailsContainer.appendChild(newSection);
    });
  }

  // Remove detail section dynamically
  if (detailsContainer) {
    detailsContainer.addEventListener("click", (e) => {
      if (e.target.classList.contains("remove-section")) {
        e.target.closest(".detail-section").remove();
      }
    });
  }
</script>

<script>
  const addIdeaForm = document.getElementById("addIdeaForm");

  addIdeaForm.addEventListener("submit", async (e) => {
    e.preventDefault(); // prevent default form submit

    try {
      const formData = new FormData();

      // Add basic fields
      formData.append("title", addIdeaForm.title.value);
      formData.append("subTitle", addIdeaForm.subTitle.value);
      formData.append("meta_title", addIdeaForm.meta_title.value);
      formData.append("meta_description", addIdeaForm.meta_description.value);
      formData.append("keywords", addIdeaForm.keywords.value);
      formData.append("og_title", addIdeaForm.og_title.value);
      formData.append("og_description", addIdeaForm.og_description.value);
      formData.append("og_url", addIdeaForm.og_url.value);
      formData.append("og_type", addIdeaForm.og_type.value);
 

      // Add OG image
      if (addIdeaForm.og_image.files[0]) {
        formData.append("og_image", addIdeaForm.og_image.files[0]);
      }

      // Add multiple detail sections
      const detailSections = document.querySelectorAll(".detail-section");
      detailSections.forEach((section, index) => {
        const title = section.querySelector('input[name="detailTitle[]"]').value;
        const description = section.querySelector('textarea[name="detailDescription[]"]').value;
        const date = section.querySelector('input[name="detailDate[]"]').value;
        const imageInput = section.querySelector('input[name="detailImage[]"]');

        formData.append(`detail[${index}].title`, title);
        formData.append(`detail[${index}].description`, description);
        formData.append(`detail[${index}].date`, date);

        if (imageInput.files[0]) {
          formData.append(`detail[${index}].image`, imageInput.files[0]);
        }
      });

      // Send POST request
      const response = await fetch("/api/ideas", {
        method: "POST",
        body: formData
      });

      console.log(formData);
      
      const result = await response.json();

      if (result.status) {
        alert("Idea added successfully!");
        addIdeaForm.reset();
        addIdeaModal.classList.add("hidden");
        window.location.reload();
      } else {
        alert("Error: " + result.message);
      }
    } catch (err) {
      console.error("Add Idea Error:", err);
      alert("Something went wrong. Check console for details.");
    }
  });



  // delete ki api 
document.querySelectorAll(".deleteBtn").forEach(btn => {
  btn.addEventListener("click", async () => {
    const id = btn.getAttribute("data-id");

    if (!confirm("Are you sure you want to delete this achievement?")) return;

    try {
      const res = await fetch(`/api/ideas/${id}`, {
        method: "DELETE"
      });

      const data = await res.json();

      if (data.status) {
        alert("✅ partner deleted successfully!");
        btn.closest("tr").remove(); // Table row remove
      } else {
        alert("❌ Delete failed: " + data.message);
      }
    } catch (err) {
      console.error(err);
      alert("⚠️ Something went wrong!");
    }
  });
});
</script>

